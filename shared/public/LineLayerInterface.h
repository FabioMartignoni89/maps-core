// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from line.djinni

#pragma once

#include "LayerInterface.h"
#include <cstdint>
#include <memory>
#include <string>
#include <unordered_set>
#include <vector>

class LineInfoInterface;
class LineLayerCallbackInterface;

class LineLayerInterface {
public:
    virtual ~LineLayerInterface() = default;

    static /*not-null*/ std::shared_ptr<LineLayerInterface> create();

    virtual void setLines(const std::vector</*not-null*/ std::shared_ptr<LineInfoInterface>> & lines) = 0;

    virtual std::vector</*not-null*/ std::shared_ptr<LineInfoInterface>> getLines() = 0;

    virtual void remove(const /*not-null*/ std::shared_ptr<LineInfoInterface> & line) = 0;

    virtual void add(const /*not-null*/ std::shared_ptr<LineInfoInterface> & line) = 0;

    virtual void clear() = 0;

    virtual void setCallbackHandler(const /*not-null*/ std::shared_ptr<LineLayerCallbackInterface> & handler) = 0;

    virtual /*not-null*/ std::shared_ptr<::LayerInterface> asLayerInterface() = 0;

    virtual void invalidate() = 0;

    virtual void resetSelection() = 0;

    virtual void setSelected(const std::unordered_set<std::string> & selectedIds) = 0;

    virtual void setLayerClickable(bool isLayerClickable) = 0;

    virtual void setRenderPassIndex(int32_t index) = 0;
};
