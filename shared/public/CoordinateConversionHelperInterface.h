// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from coordinate_system.djinni

#pragma once

#include <cstdint>
#include <memory>

class CoordinateConverterInterface;
struct Coord;
struct QuadCoord;
struct RectCoord;

class CoordinateConversionHelperInterface {
public:
    virtual ~CoordinateConversionHelperInterface() = default;

    /**
     * This instance is independent of the map and does not know about the rendering system.
     * It can not be used to convert coordinates into rendering space.
     */
    static /*not-null*/ std::shared_ptr<CoordinateConversionHelperInterface> independentInstance();

    virtual void registerConverter(const /*not-null*/ std::shared_ptr<CoordinateConverterInterface> & converter) = 0;

    virtual Coord convert(int32_t to, const Coord & coordinate) = 0;

    virtual RectCoord convertRect(int32_t to, const RectCoord & rect) = 0;

    virtual RectCoord convertRectToRenderSystem(const RectCoord & rect) = 0;

    virtual QuadCoord convertQuad(int32_t to, const QuadCoord & quad) = 0;

    virtual QuadCoord convertQuadToRenderSystem(const QuadCoord & quad) = 0;

    virtual Coord convertToRenderSystem(const Coord & coordinate) = 0;
};
