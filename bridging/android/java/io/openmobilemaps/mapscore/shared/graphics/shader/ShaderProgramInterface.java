// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from shader.djinni

package io.openmobilemaps.mapscore.shared.graphics.shader;

import com.snapchat.djinni.NativeObjectManager;
import java.util.concurrent.atomic.AtomicBoolean;

public abstract class ShaderProgramInterface {
    public abstract String getProgramName();

    public abstract void setupProgram(io.openmobilemaps.mapscore.shared.graphics.RenderingContextInterface context);

    public abstract void preRender(io.openmobilemaps.mapscore.shared.graphics.RenderingContextInterface context);

    public static final class CppProxy extends ShaderProgramInterface
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
            NativeObjectManager.register(this, nativeRef);
        }
        public static native void nativeDestroy(long nativeRef);

        @Override
        public String getProgramName()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getProgramName(this.nativeRef);
        }
        private native String native_getProgramName(long _nativeRef);

        @Override
        public void setupProgram(io.openmobilemaps.mapscore.shared.graphics.RenderingContextInterface context)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setupProgram(this.nativeRef, context);
        }
        private native void native_setupProgram(long _nativeRef, io.openmobilemaps.mapscore.shared.graphics.RenderingContextInterface context);

        @Override
        public void preRender(io.openmobilemaps.mapscore.shared.graphics.RenderingContextInterface context)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_preRender(this.nativeRef, context);
        }
        private native void native_preRender(long _nativeRef, io.openmobilemaps.mapscore.shared.graphics.RenderingContextInterface context);
    }
}
