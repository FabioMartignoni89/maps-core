// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from shader.djinni

package io.openmobilemaps.mapscore.shared.graphics.shader

import java.util.concurrent.atomic.AtomicBoolean

abstract class ColorLineShaderInterface {

    abstract fun setStyle(lineStyle: io.openmobilemaps.mapscore.shared.map.layers.line.LineStyle)

    abstract fun setHighlighted(highlighted: Boolean)

    abstract fun asLineShaderProgramInterface(): LineShaderProgramInterface

    private class CppProxy : ColorLineShaderInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
        }

        private external fun nativeDestroy(nativeRef: Long)
        fun _djinni_private_destroy() {
            val destroyed = this.destroyed.getAndSet(true)
            if (!destroyed) nativeDestroy(this.nativeRef)
        }
        protected fun finalize() {
            _djinni_private_destroy()
        }

        override fun setStyle(lineStyle: io.openmobilemaps.mapscore.shared.map.layers.line.LineStyle) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_setStyle(this.nativeRef, lineStyle)
        }
        private external fun native_setStyle(_nativeRef: Long, lineStyle: io.openmobilemaps.mapscore.shared.map.layers.line.LineStyle)

        override fun setHighlighted(highlighted: Boolean) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_setHighlighted(this.nativeRef, highlighted)
        }
        private external fun native_setHighlighted(_nativeRef: Long, highlighted: Boolean)

        override fun asLineShaderProgramInterface(): LineShaderProgramInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_asLineShaderProgramInterface(this.nativeRef)
        }
        private external fun native_asLineShaderProgramInterface(_nativeRef: Long): LineShaderProgramInterface
    }
}
