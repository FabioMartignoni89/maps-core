// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from common.djinni

package io.openmobilemaps.mapscore.shared.graphics.common;

public final class Color implements Comparable<Color> {


    /*package*/ final float r;

    /*package*/ final float g;

    /*package*/ final float b;

    /*package*/ final float a;

    public Color(
            float r,
            float g,
            float b,
            float a) {
        this.r = r;
        this.g = g;
        this.b = b;
        this.a = a;
    }

    public float getR() {
        return r;
    }

    public float getG() {
        return g;
    }

    public float getB() {
        return b;
    }

    public float getA() {
        return a;
    }

    @Override
    public boolean equals(Object obj) {
        if (!(obj instanceof Color)) {
            return false;
        }
        Color other = (Color) obj;
        return this.r == other.r &&
                this.g == other.g &&
                this.b == other.b &&
                this.a == other.a;
    }

    @Override
    public int hashCode() {
        // Pick an arbitrary non-zero starting value
        int hashCode = 17;
        hashCode = hashCode * 31 + Float.floatToIntBits(r);
        hashCode = hashCode * 31 + Float.floatToIntBits(g);
        hashCode = hashCode * 31 + Float.floatToIntBits(b);
        hashCode = hashCode * 31 + Float.floatToIntBits(a);
        return hashCode;
    }

    @Override
    public String toString() {
        return "Color{" +
                "r=" + r +
                "," + "g=" + g +
                "," + "b=" + b +
                "," + "a=" + a +
        "}";
    }


    @Override
    public int compareTo(Color other)  {
        int tempResult;
        if (this.r < other.r) {
            tempResult = -1;
        } else if (this.r > other.r) {
            tempResult = 1;
        } else {
            tempResult = 0;
        }
        if (tempResult != 0) {
            return tempResult;
        }
        if (this.g < other.g) {
            tempResult = -1;
        } else if (this.g > other.g) {
            tempResult = 1;
        } else {
            tempResult = 0;
        }
        if (tempResult != 0) {
            return tempResult;
        }
        if (this.b < other.b) {
            tempResult = -1;
        } else if (this.b > other.b) {
            tempResult = 1;
        } else {
            tempResult = 0;
        }
        if (tempResult != 0) {
            return tempResult;
        }
        if (this.a < other.a) {
            tempResult = -1;
        } else if (this.a > other.a) {
            tempResult = 1;
        } else {
            tempResult = 0;
        }
        if (tempResult != 0) {
            return tempResult;
        }
        return 0;
    }
}
