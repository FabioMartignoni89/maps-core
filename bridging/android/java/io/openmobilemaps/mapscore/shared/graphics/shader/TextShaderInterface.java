// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from shader.djinni

package io.openmobilemaps.mapscore.shared.graphics.shader;

import com.snapchat.djinni.NativeObjectManager;
import java.util.concurrent.atomic.AtomicBoolean;

public abstract class TextShaderInterface {
    public abstract void setColor(io.openmobilemaps.mapscore.shared.graphics.common.Color color);

    public abstract void setHaloColor(io.openmobilemaps.mapscore.shared.graphics.common.Color color);

    public abstract void setScale(float scale);

    public abstract void setReferencePoint(io.openmobilemaps.mapscore.shared.graphics.common.Vec3D point);

    public abstract ShaderProgramInterface asShaderProgramInterface();

    public static final class CppProxy extends TextShaderInterface
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
            NativeObjectManager.register(this, nativeRef);
        }
        public static native void nativeDestroy(long nativeRef);

        @Override
        public void setColor(io.openmobilemaps.mapscore.shared.graphics.common.Color color)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setColor(this.nativeRef, color);
        }
        private native void native_setColor(long _nativeRef, io.openmobilemaps.mapscore.shared.graphics.common.Color color);

        @Override
        public void setHaloColor(io.openmobilemaps.mapscore.shared.graphics.common.Color color)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setHaloColor(this.nativeRef, color);
        }
        private native void native_setHaloColor(long _nativeRef, io.openmobilemaps.mapscore.shared.graphics.common.Color color);

        @Override
        public void setScale(float scale)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setScale(this.nativeRef, scale);
        }
        private native void native_setScale(long _nativeRef, float scale);

        @Override
        public void setReferencePoint(io.openmobilemaps.mapscore.shared.graphics.common.Vec3D point)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setReferencePoint(this.nativeRef, point);
        }
        private native void native_setReferencePoint(long _nativeRef, io.openmobilemaps.mapscore.shared.graphics.common.Vec3D point);

        @Override
        public ShaderProgramInterface asShaderProgramInterface()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_asShaderProgramInterface(this.nativeRef);
        }
        private native ShaderProgramInterface native_asShaderProgramInterface(long _nativeRef);
    }
}
