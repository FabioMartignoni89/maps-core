// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from shader.djinni

package io.openmobilemaps.mapscore.shared.graphics.shader

import java.util.concurrent.atomic.AtomicBoolean

abstract class TextShaderInterface {

    abstract fun setColor(red: Float, green: Float, blue: Float, alpha: Float)

    abstract fun setScale(scale: Float)

    abstract fun setReferencePoint(point: io.openmobilemaps.mapscore.shared.graphics.common.Vec3D)

    abstract fun asShaderProgramInterface(): ShaderProgramInterface

    private class CppProxy : TextShaderInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
        }

        private external fun nativeDestroy(nativeRef: Long)
        fun _djinni_private_destroy() {
            val destroyed = this.destroyed.getAndSet(true)
            if (!destroyed) nativeDestroy(this.nativeRef)
        }
        protected fun finalize() {
            _djinni_private_destroy()
        }

        override fun setColor(red: Float, green: Float, blue: Float, alpha: Float) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_setColor(this.nativeRef, red, green, blue, alpha)
        }
        private external fun native_setColor(_nativeRef: Long, red: Float, green: Float, blue: Float, alpha: Float)

        override fun setScale(scale: Float) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_setScale(this.nativeRef, scale)
        }
        private external fun native_setScale(_nativeRef: Long, scale: Float)

        override fun setReferencePoint(point: io.openmobilemaps.mapscore.shared.graphics.common.Vec3D) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_setReferencePoint(this.nativeRef, point)
        }
        private external fun native_setReferencePoint(_nativeRef: Long, point: io.openmobilemaps.mapscore.shared.graphics.common.Vec3D)

        override fun asShaderProgramInterface(): ShaderProgramInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_asShaderProgramInterface(this.nativeRef)
        }
        private external fun native_asShaderProgramInterface(_nativeRef: Long): ShaderProgramInterface
    }
}
