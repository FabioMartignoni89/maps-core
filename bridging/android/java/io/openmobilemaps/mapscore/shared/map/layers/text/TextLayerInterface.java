// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from text.djinni

package io.openmobilemaps.mapscore.shared.map.layers.text;

import com.snapchat.djinni.NativeObjectManager;
import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;

public abstract class TextLayerInterface {
    public abstract void setTexts(ArrayList<TextInfoInterface> texts);

    public abstract io.openmobilemaps.mapscore.shared.map.LayerInterface asLayerInterface();

    public abstract void invalidate();

    public static native TextLayerInterface create(io.openmobilemaps.mapscore.shared.map.loader.FontLoaderInterface fontLoader);

    public static final class CppProxy extends TextLayerInterface
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
            NativeObjectManager.register(this, nativeRef);
        }
        public static native void nativeDestroy(long nativeRef);

        @Override
        public void setTexts(ArrayList<TextInfoInterface> texts)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setTexts(this.nativeRef, texts);
        }
        private native void native_setTexts(long _nativeRef, ArrayList<TextInfoInterface> texts);

        @Override
        public io.openmobilemaps.mapscore.shared.map.LayerInterface asLayerInterface()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_asLayerInterface(this.nativeRef);
        }
        private native io.openmobilemaps.mapscore.shared.map.LayerInterface native_asLayerInterface(long _nativeRef);

        @Override
        public void invalidate()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_invalidate(this.nativeRef);
        }
        private native void native_invalidate(long _nativeRef);
    }
}
