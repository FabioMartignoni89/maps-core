// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from tiled_layer.djinni

package io.openmobilemaps.mapscore.shared.map.layers.tiled

import java.util.concurrent.atomic.AtomicBoolean

abstract class Tiled2dMapSourceInterface {

    abstract fun onVisibleBoundsChanged(visibleBounds: io.openmobilemaps.mapscore.shared.map.coordinates.RectCoord, zoom: Double)

    abstract fun setMinZoomLevelIdentifier(value: Int?)

    abstract fun getMinZoomLevelIdentifier(): Int?

    abstract fun setMaxZoomLevelIdentifier(value: Int?)

    abstract fun getMaxZoomLevelIdentifier(): Int?

    private class CppProxy : Tiled2dMapSourceInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
        }

        private external fun nativeDestroy(nativeRef: Long)
        fun _djinni_private_destroy() {
            val destroyed = this.destroyed.getAndSet(true)
            if (!destroyed) nativeDestroy(this.nativeRef)
        }
        protected fun finalize() {
            _djinni_private_destroy()
        }

        override fun onVisibleBoundsChanged(visibleBounds: io.openmobilemaps.mapscore.shared.map.coordinates.RectCoord, zoom: Double) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_onVisibleBoundsChanged(this.nativeRef, visibleBounds, zoom)
        }
        private external fun native_onVisibleBoundsChanged(_nativeRef: Long, visibleBounds: io.openmobilemaps.mapscore.shared.map.coordinates.RectCoord, zoom: Double)

        override fun setMinZoomLevelIdentifier(value: Int?) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_setMinZoomLevelIdentifier(this.nativeRef, value)
        }
        private external fun native_setMinZoomLevelIdentifier(_nativeRef: Long, value: Int?)

        override fun getMinZoomLevelIdentifier(): Int? {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getMinZoomLevelIdentifier(this.nativeRef)
        }
        private external fun native_getMinZoomLevelIdentifier(_nativeRef: Long): Int?

        override fun setMaxZoomLevelIdentifier(value: Int?) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_setMaxZoomLevelIdentifier(this.nativeRef, value)
        }
        private external fun native_setMaxZoomLevelIdentifier(_nativeRef: Long, value: Int?)

        override fun getMaxZoomLevelIdentifier(): Int? {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getMaxZoomLevelIdentifier(this.nativeRef)
        }
        private external fun native_getMaxZoomLevelIdentifier(_nativeRef: Long): Int?
    }
}
