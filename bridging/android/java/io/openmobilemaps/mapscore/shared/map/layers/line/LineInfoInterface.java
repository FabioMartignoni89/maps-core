// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from line.djinni

package io.openmobilemaps.mapscore.shared.map.layers.line;

import com.snapchat.djinni.NativeObjectManager;
import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;

public abstract class LineInfoInterface {
    public abstract String getIdentifier();

    public abstract ArrayList<io.openmobilemaps.mapscore.shared.map.coordinates.Coord> getCoordinates();

    public abstract LineStyle getStyle();

    public static final class CppProxy extends LineInfoInterface
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
            NativeObjectManager.register(this, nativeRef);
        }
        public static native void nativeDestroy(long nativeRef);

        @Override
        public String getIdentifier()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getIdentifier(this.nativeRef);
        }
        private native String native_getIdentifier(long _nativeRef);

        @Override
        public ArrayList<io.openmobilemaps.mapscore.shared.map.coordinates.Coord> getCoordinates()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getCoordinates(this.nativeRef);
        }
        private native ArrayList<io.openmobilemaps.mapscore.shared.map.coordinates.Coord> native_getCoordinates(long _nativeRef);

        @Override
        public LineStyle getStyle()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getStyle(this.nativeRef);
        }
        private native LineStyle native_getStyle(long _nativeRef);
    }
}
