// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from icon.djinni

package io.openmobilemaps.mapscore.shared.map.layers.icon;

import com.snapchat.djinni.NativeObjectManager;
import java.util.concurrent.atomic.AtomicBoolean;

public abstract class IconInfoInterface {
    public abstract String getIdentifier();

    public abstract io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface getTexture();

    public abstract void setCoordinate(io.openmobilemaps.mapscore.shared.map.coordinates.Coord coord);

    public abstract io.openmobilemaps.mapscore.shared.map.coordinates.Coord getCoordinate();

    public abstract void setIconSize(io.openmobilemaps.mapscore.shared.graphics.common.Vec2F size);

    public abstract io.openmobilemaps.mapscore.shared.graphics.common.Vec2F getIconSize();

    public abstract void setType(IconType scaleType);

    public abstract IconType getType();

    public abstract io.openmobilemaps.mapscore.shared.graphics.common.Vec2F getIconAnchor();

    public static final class CppProxy extends IconInfoInterface
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
            NativeObjectManager.register(this, nativeRef);
        }
        public static native void nativeDestroy(long nativeRef);

        @Override
        public String getIdentifier()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getIdentifier(this.nativeRef);
        }
        private native String native_getIdentifier(long _nativeRef);

        @Override
        public io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface getTexture()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getTexture(this.nativeRef);
        }
        private native io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface native_getTexture(long _nativeRef);

        @Override
        public void setCoordinate(io.openmobilemaps.mapscore.shared.map.coordinates.Coord coord)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setCoordinate(this.nativeRef, coord);
        }
        private native void native_setCoordinate(long _nativeRef, io.openmobilemaps.mapscore.shared.map.coordinates.Coord coord);

        @Override
        public io.openmobilemaps.mapscore.shared.map.coordinates.Coord getCoordinate()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getCoordinate(this.nativeRef);
        }
        private native io.openmobilemaps.mapscore.shared.map.coordinates.Coord native_getCoordinate(long _nativeRef);

        @Override
        public void setIconSize(io.openmobilemaps.mapscore.shared.graphics.common.Vec2F size)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setIconSize(this.nativeRef, size);
        }
        private native void native_setIconSize(long _nativeRef, io.openmobilemaps.mapscore.shared.graphics.common.Vec2F size);

        @Override
        public io.openmobilemaps.mapscore.shared.graphics.common.Vec2F getIconSize()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getIconSize(this.nativeRef);
        }
        private native io.openmobilemaps.mapscore.shared.graphics.common.Vec2F native_getIconSize(long _nativeRef);

        @Override
        public void setType(IconType scaleType)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setType(this.nativeRef, scaleType);
        }
        private native void native_setType(long _nativeRef, IconType scaleType);

        @Override
        public IconType getType()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getType(this.nativeRef);
        }
        private native IconType native_getType(long _nativeRef);

        @Override
        public io.openmobilemaps.mapscore.shared.graphics.common.Vec2F getIconAnchor()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getIconAnchor(this.nativeRef);
        }
        private native io.openmobilemaps.mapscore.shared.graphics.common.Vec2F native_getIconAnchor(long _nativeRef);
    }
}
