// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from tiled_layer.djinni

package io.openmobilemaps.mapscore.shared.map.layers.tiled;

import com.snapchat.djinni.NativeObjectManager;
import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;

public abstract class Tiled2dMapLayerConfig {
    public abstract String getCoordinateSystemIdentifier();

    public abstract String getTileUrl(int x, int y, int t, int zoom);

    public abstract ArrayList<Tiled2dMapZoomLevelInfo> getZoomLevelInfos();

    public abstract Tiled2dMapZoomInfo getZoomInfo();

    public abstract String getLayerName();

    public abstract Tiled2dMapVectorSettings getVectorSettings();

    public static final class CppProxy extends Tiled2dMapLayerConfig
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
            NativeObjectManager.register(this, nativeRef);
        }
        public static native void nativeDestroy(long nativeRef);

        @Override
        public String getCoordinateSystemIdentifier()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getCoordinateSystemIdentifier(this.nativeRef);
        }
        private native String native_getCoordinateSystemIdentifier(long _nativeRef);

        @Override
        public String getTileUrl(int x, int y, int t, int zoom)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getTileUrl(this.nativeRef, x, y, t, zoom);
        }
        private native String native_getTileUrl(long _nativeRef, int x, int y, int t, int zoom);

        @Override
        public ArrayList<Tiled2dMapZoomLevelInfo> getZoomLevelInfos()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getZoomLevelInfos(this.nativeRef);
        }
        private native ArrayList<Tiled2dMapZoomLevelInfo> native_getZoomLevelInfos(long _nativeRef);

        @Override
        public Tiled2dMapZoomInfo getZoomInfo()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getZoomInfo(this.nativeRef);
        }
        private native Tiled2dMapZoomInfo native_getZoomInfo(long _nativeRef);

        @Override
        public String getLayerName()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getLayerName(this.nativeRef);
        }
        private native String native_getLayerName(long _nativeRef);

        @Override
        public Tiled2dMapVectorSettings getVectorSettings()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getVectorSettings(this.nativeRef);
        }
        private native Tiled2dMapVectorSettings native_getVectorSettings(long _nativeRef);
    }
}
