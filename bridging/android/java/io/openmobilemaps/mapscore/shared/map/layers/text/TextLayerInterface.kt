// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from text.djinni

package io.openmobilemaps.mapscore.shared.map.layers.text

import java.util.concurrent.atomic.AtomicBoolean

abstract class TextLayerInterface {

    abstract fun setTexts(texts: ArrayList<TextInfoInterface>)

    abstract fun asLayerInterface(): io.openmobilemaps.mapscore.shared.map.LayerInterface

    abstract fun invalidate()

    companion object {
        @JvmStatic
        fun create(fontLoader: io.openmobilemaps.mapscore.shared.map.loader.FontLoaderInterface): TextLayerInterface {
            return CppProxy.create(fontLoader)
        }
    }

    private class CppProxy : TextLayerInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
        }

        private external fun nativeDestroy(nativeRef: Long)
        fun _djinni_private_destroy() {
            val destroyed = this.destroyed.getAndSet(true)
            if (!destroyed) nativeDestroy(this.nativeRef)
        }
        protected fun finalize() {
            _djinni_private_destroy()
        }

        override fun setTexts(texts: ArrayList<TextInfoInterface>) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_setTexts(this.nativeRef, texts)
        }
        private external fun native_setTexts(_nativeRef: Long, texts: ArrayList<TextInfoInterface>)

        override fun asLayerInterface(): io.openmobilemaps.mapscore.shared.map.LayerInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_asLayerInterface(this.nativeRef)
        }
        private external fun native_asLayerInterface(_nativeRef: Long): io.openmobilemaps.mapscore.shared.map.LayerInterface

        override fun invalidate() {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_invalidate(this.nativeRef)
        }
        private external fun native_invalidate(_nativeRef: Long)

        companion object {
            @JvmStatic
            external fun create(fontLoader: io.openmobilemaps.mapscore.shared.map.loader.FontLoaderInterface): TextLayerInterface
        }
    }
}
