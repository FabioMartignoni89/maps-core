// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from loader.djinni

#include "NativeFontLoaderInterface.h"  // my header
#include "NativeFont.h"
#include "NativeFontLoaderResult.h"

namespace djinni_generated {

NativeFontLoaderInterface::NativeFontLoaderInterface() : ::djinni::JniInterface<::FontLoaderInterface, NativeFontLoaderInterface>("io/openmobilemaps/mapscore/shared/map/loader/FontLoaderInterface$CppProxy") {}

NativeFontLoaderInterface::~NativeFontLoaderInterface() = default;

NativeFontLoaderInterface::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeFontLoaderInterface::JavaProxy::~JavaProxy() = default;

::FontLoaderResult NativeFontLoaderInterface::JavaProxy::loadFont(const ::Font & c_font) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeFontLoaderInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_loadFont,
                                         ::djinni::get(::djinni_generated::NativeFont::fromCpp(jniEnv, c_font)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeFontLoaderResult::toCpp(jniEnv, jret);
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_loader_FontLoaderInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::FontLoaderInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_loader_FontLoaderInterface_00024CppProxy_native_1loadFont(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_font)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::FontLoaderInterface>(nativeRef);
        auto r = ref->loadFont(::djinni_generated::NativeFont::toCpp(jniEnv, j_font));
        return ::djinni::release(::djinni_generated::NativeFontLoaderResult::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

} // namespace djinni_generated
