// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from loader.djinni

#pragma once

#include "FontGlyph.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeFontGlyph final {
public:
    using CppType = ::FontGlyph;
    using JniType = jobject;

    using Boxed = NativeFontGlyph;

    ~NativeFontGlyph();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeFontGlyph();
    friend ::djinni::JniClass<NativeFontGlyph>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/map/loader/FontGlyph") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Lio/openmobilemaps/mapscore/shared/graphics/common/Vec2D;Lio/openmobilemaps/mapscore/shared/graphics/common/Vec2D;Lio/openmobilemaps/mapscore/shared/graphics/common/Vec2D;Lio/openmobilemaps/mapscore/shared/graphics/common/Quad2dD;)V") };
    const jfieldID field_charCode { ::djinni::jniGetFieldID(clazz.get(), "charCode", "Ljava/lang/String;") };
    const jfieldID field_advance { ::djinni::jniGetFieldID(clazz.get(), "advance", "Lio/openmobilemaps/mapscore/shared/graphics/common/Vec2D;") };
    const jfieldID field_boundingBoxSize { ::djinni::jniGetFieldID(clazz.get(), "boundingBoxSize", "Lio/openmobilemaps/mapscore/shared/graphics/common/Vec2D;") };
    const jfieldID field_bearing { ::djinni::jniGetFieldID(clazz.get(), "bearing", "Lio/openmobilemaps/mapscore/shared/graphics/common/Vec2D;") };
    const jfieldID field_uv { ::djinni::jniGetFieldID(clazz.get(), "uv", "Lio/openmobilemaps/mapscore/shared/graphics/common/Quad2dD;") };
};

}  // namespace djinni_generated
