// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from loader.djinni

#pragma once

#include "FontData.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeFontData final {
public:
    using CppType = ::FontData;
    using JniType = jobject;

    using Boxed = NativeFontData;

    ~NativeFontData();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeFontData();
    friend ::djinni::JniClass<NativeFontData>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/map/loader/FontData") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lio/openmobilemaps/mapscore/shared/map/loader/FontInfo;Ljava/util/ArrayList;)V") };
    const jfieldID field_info { ::djinni::jniGetFieldID(clazz.get(), "info", "Lio/openmobilemaps/mapscore/shared/map/loader/FontInfo;") };
    const jfieldID field_glyphs { ::djinni::jniGetFieldID(clazz.get(), "glyphs", "Ljava/util/ArrayList;") };
};

}  // namespace djinni_generated
