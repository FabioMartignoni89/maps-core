// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from line.djinni

#include "NativeLineStyle.h"  // my header
#include "Marshal.hpp"
#include "NativeColorStateList.h"
#include "NativeSizeType.h"

namespace djinni_generated {

NativeLineStyle::NativeLineStyle() = default;

NativeLineStyle::~NativeLineStyle() = default;

auto NativeLineStyle::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeLineStyle>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni_generated::NativeColorStateList::fromCpp(jniEnv, c.color)),
                                                           ::djinni::get(::djinni_generated::NativeSizeType::fromCpp(jniEnv, c.widthType)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.width)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeLineStyle::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 4);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeLineStyle>::get();
    return {::djinni_generated::NativeColorStateList::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_color)),
            ::djinni_generated::NativeSizeType::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_widthType)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_width))};
}

}  // namespace djinni_generated
