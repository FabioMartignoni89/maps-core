// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from line.djinni

#pragma once

#include "LineStyle.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeLineStyle final {
public:
    using CppType = ::LineStyle;
    using JniType = jobject;

    using Boxed = NativeLineStyle;

    ~NativeLineStyle();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeLineStyle();
    friend ::djinni::JniClass<NativeLineStyle>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/map/layers/line/LineStyle") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lio/openmobilemaps/mapscore/shared/map/layers/ColorStateList;Lio/openmobilemaps/mapscore/shared/map/layers/SizeType;F)V") };
    const jfieldID field_color { ::djinni::jniGetFieldID(clazz.get(), "color", "Lio/openmobilemaps/mapscore/shared/map/layers/ColorStateList;") };
    const jfieldID field_widthType { ::djinni::jniGetFieldID(clazz.get(), "widthType", "Lio/openmobilemaps/mapscore/shared/map/layers/SizeType;") };
    const jfieldID field_width { ::djinni::jniGetFieldID(clazz.get(), "width", "F") };
};

}  // namespace djinni_generated
