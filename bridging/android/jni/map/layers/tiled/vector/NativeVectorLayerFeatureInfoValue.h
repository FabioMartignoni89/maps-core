// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from tiled_vector_layer.djinni

#pragma once

#include "VectorLayerFeatureInfoValue.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeVectorLayerFeatureInfoValue final {
public:
    using CppType = ::VectorLayerFeatureInfoValue;
    using JniType = jobject;

    using Boxed = NativeVectorLayerFeatureInfoValue;

    ~NativeVectorLayerFeatureInfoValue();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeVectorLayerFeatureInfoValue();
    friend ::djinni::JniClass<NativeVectorLayerFeatureInfoValue>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/map/layers/tiled/vector/VectorLayerFeatureInfoValue") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/Double;Ljava/lang/Long;Ljava/lang/Boolean;Lio/openmobilemaps/mapscore/shared/graphics/common/Color;Ljava/util/ArrayList;Ljava/util/ArrayList;)V") };
    const jfieldID field_stringVal { ::djinni::jniGetFieldID(clazz.get(), "stringVal", "Ljava/lang/String;") };
    const jfieldID field_doubleVal { ::djinni::jniGetFieldID(clazz.get(), "doubleVal", "Ljava/lang/Double;") };
    const jfieldID field_intVal { ::djinni::jniGetFieldID(clazz.get(), "intVal", "Ljava/lang/Long;") };
    const jfieldID field_boolVal { ::djinni::jniGetFieldID(clazz.get(), "boolVal", "Ljava/lang/Boolean;") };
    const jfieldID field_colorVal { ::djinni::jniGetFieldID(clazz.get(), "colorVal", "Lio/openmobilemaps/mapscore/shared/graphics/common/Color;") };
    const jfieldID field_listFloatVal { ::djinni::jniGetFieldID(clazz.get(), "listFloatVal", "Ljava/util/ArrayList;") };
    const jfieldID field_listStringVal { ::djinni::jniGetFieldID(clazz.get(), "listStringVal", "Ljava/util/ArrayList;") };
};

} // namespace djinni_generated
