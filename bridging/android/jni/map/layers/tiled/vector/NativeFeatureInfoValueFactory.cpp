// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from tiled_vector_layer.djinni

#include "NativeFeatureInfoValueFactory.h"  // my header
#include "Marshal.hpp"
#include "NativeColor.h"
#include "NativeVectorLayerFeatureInfoValue.h"

namespace djinni_generated {

NativeFeatureInfoValueFactory::NativeFeatureInfoValueFactory() : ::djinni::JniInterface<::FeatureInfoValueFactory, NativeFeatureInfoValueFactory>("io/openmobilemaps/mapscore/shared/map/layers/tiled/vector/FeatureInfoValueFactory$CppProxy") {}

NativeFeatureInfoValueFactory::~NativeFeatureInfoValueFactory() = default;


CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_vector_FeatureInfoValueFactory_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::FeatureInfoValueFactory>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_vector_FeatureInfoValueFactory_createString(JNIEnv* jniEnv, jobject /*this*/, jstring j_value)
{
    try {
        auto r = ::FeatureInfoValueFactory::createString(::djinni::String::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::NativeVectorLayerFeatureInfoValue::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_vector_FeatureInfoValueFactory_createDouble(JNIEnv* jniEnv, jobject /*this*/, jdouble j_value)
{
    try {
        auto r = ::FeatureInfoValueFactory::createDouble(::djinni::F64::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::NativeVectorLayerFeatureInfoValue::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_vector_FeatureInfoValueFactory_createInt(JNIEnv* jniEnv, jobject /*this*/, jlong j_value)
{
    try {
        auto r = ::FeatureInfoValueFactory::createInt(::djinni::I64::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::NativeVectorLayerFeatureInfoValue::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_vector_FeatureInfoValueFactory_createBool(JNIEnv* jniEnv, jobject /*this*/, jboolean j_value)
{
    try {
        auto r = ::FeatureInfoValueFactory::createBool(::djinni::Bool::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::NativeVectorLayerFeatureInfoValue::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_vector_FeatureInfoValueFactory_createColor(JNIEnv* jniEnv, jobject /*this*/, ::djinni_generated::NativeColor::JniType j_value)
{
    try {
        auto r = ::FeatureInfoValueFactory::createColor(::djinni_generated::NativeColor::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::NativeVectorLayerFeatureInfoValue::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_vector_FeatureInfoValueFactory_createListFloat(JNIEnv* jniEnv, jobject /*this*/, jobject j_value)
{
    try {
        auto r = ::FeatureInfoValueFactory::createListFloat(::djinni::List<::djinni::F32>::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::NativeVectorLayerFeatureInfoValue::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_vector_FeatureInfoValueFactory_createListString(JNIEnv* jniEnv, jobject /*this*/, jobject j_value)
{
    try {
        auto r = ::FeatureInfoValueFactory::createListString(::djinni::List<::djinni::String>::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::NativeVectorLayerFeatureInfoValue::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

} // namespace djinni_generated
