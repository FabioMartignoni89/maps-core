// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from tiled_layer.djinni

#include "NativeTiled2dMapReadyStateListener.h"  // my header
#include "NativeLayerReadyState.h"

namespace djinni_generated {

NativeTiled2dMapReadyStateListener::NativeTiled2dMapReadyStateListener() : ::djinni::JniInterface<::Tiled2dMapReadyStateListener, NativeTiled2dMapReadyStateListener>("io/openmobilemaps/mapscore/shared/map/layers/tiled/Tiled2dMapReadyStateListener$CppProxy") {}

NativeTiled2dMapReadyStateListener::~NativeTiled2dMapReadyStateListener() = default;

NativeTiled2dMapReadyStateListener::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeTiled2dMapReadyStateListener::JavaProxy::~JavaProxy() = default;

void NativeTiled2dMapReadyStateListener::JavaProxy::stateUpdate(::LayerReadyState c_state) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeTiled2dMapReadyStateListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_stateUpdate,
                           ::djinni::get(::djinni_generated::NativeLayerReadyState::fromCpp(jniEnv, c_state)));
    ::djinni::jniExceptionCheck(jniEnv);
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_Tiled2dMapReadyStateListener_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::Tiled2dMapReadyStateListener>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_Tiled2dMapReadyStateListener_00024CppProxy_native_1stateUpdate(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeLayerReadyState::JniType j_state)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::Tiled2dMapReadyStateListener>(nativeRef);
        ref->stateUpdate(::djinni_generated::NativeLayerReadyState::toCpp(jniEnv, j_state));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

} // namespace djinni_generated
