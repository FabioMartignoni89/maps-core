// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from geo_json_parser.djinni

#pragma once

#include "GeoJsonPoint.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeGeoJsonPoint final {
public:
    using CppType = ::GeoJsonPoint;
    using JniType = jobject;

    using Boxed = NativeGeoJsonPoint;

    ~NativeGeoJsonPoint();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeGeoJsonPoint();
    friend ::djinni::JniClass<NativeGeoJsonPoint>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/map/layers/tiled/GeoJsonPoint") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lio/openmobilemaps/mapscore/shared/map/coordinates/Coord;Lio/openmobilemaps/mapscore/shared/map/layers/tiled/vector/VectorLayerFeatureInfo;)V") };
    const jfieldID field_point { ::djinni::jniGetFieldID(clazz.get(), "point", "Lio/openmobilemaps/mapscore/shared/map/coordinates/Coord;") };
    const jfieldID field_featureInfo { ::djinni::jniGetFieldID(clazz.get(), "featureInfo", "Lio/openmobilemaps/mapscore/shared/map/layers/tiled/vector/VectorLayerFeatureInfo;") };
};

} // namespace djinni_generated
