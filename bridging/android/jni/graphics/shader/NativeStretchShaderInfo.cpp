// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from shader.djinni

#include "NativeStretchShaderInfo.h"  // my header
#include "Marshal.hpp"
#include "NativeRectD.h"

namespace djinni_generated {

NativeStretchShaderInfo::NativeStretchShaderInfo() = default;

NativeStretchShaderInfo::~NativeStretchShaderInfo() = default;

auto NativeStretchShaderInfo::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeStretchShaderInfo>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.scaleX)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.stretchX0Begin)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.stretchX0End)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.stretchX1Begin)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.stretchX1End)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.scaleY)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.stretchY0Begin)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.stretchY0End)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.stretchY1Begin)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.stretchY1End)),
                                                           ::djinni::get(::djinni_generated::NativeRectD::fromCpp(jniEnv, c.uv)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeStretchShaderInfo::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 12);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeStretchShaderInfo>::get();
    return {::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_scaleX)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_stretchX0Begin)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_stretchX0End)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_stretchX1Begin)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_stretchX1End)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_scaleY)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_stretchY0Begin)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_stretchY0End)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_stretchY1Begin)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_stretchY1End)),
            ::djinni_generated::NativeRectD::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_uv))};
}

} // namespace djinni_generated
