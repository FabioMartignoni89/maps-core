// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from common.djinni

#pragma once

#include "CircleD.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeCircleD final {
public:
    using CppType = ::CircleD;
    using JniType = jobject;

    using Boxed = NativeCircleD;

    ~NativeCircleD();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeCircleD();
    friend ::djinni::JniClass<NativeCircleD>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/graphics/common/CircleD") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lio/openmobilemaps/mapscore/shared/graphics/common/Vec2D;D)V") };
    const jfieldID field_origin { ::djinni::jniGetFieldID(clazz.get(), "origin", "Lio/openmobilemaps/mapscore/shared/graphics/common/Vec2D;") };
    const jfieldID field_radius { ::djinni::jniGetFieldID(clazz.get(), "radius", "D") };
};

} // namespace djinni_generated
