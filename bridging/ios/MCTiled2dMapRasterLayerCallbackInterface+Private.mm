// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from tiled_raster_layer.djinni

#import "MCTiled2dMapRasterLayerCallbackInterface+Private.h"
#import "MCTiled2dMapRasterLayerCallbackInterface.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "MCCoord+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface MCTiled2dMapRasterLayerCallbackInterfaceCppProxy : NSObject<MCTiled2dMapRasterLayerCallbackInterface>

- (id)initWithCpp:(const std::shared_ptr<::Tiled2dMapRasterLayerCallbackInterface>&)cppRef;

@end

@implementation MCTiled2dMapRasterLayerCallbackInterfaceCppProxy {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::Tiled2dMapRasterLayerCallbackInterface>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::Tiled2dMapRasterLayerCallbackInterface>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (BOOL)onClickConfirmed:(nonnull MCCoord *)coord {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->onClickConfirmed(::djinni_generated::Coord::toCpp(coord));
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)onLongPress:(nonnull MCCoord *)coord {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->onLongPress(::djinni_generated::Coord::toCpp(coord));
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

class Tiled2dMapRasterLayerCallbackInterface::ObjcProxy final
: public ::Tiled2dMapRasterLayerCallbackInterface
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::Tiled2dMapRasterLayerCallbackInterface;
public:
    using ObjcProxyBase::ObjcProxyBase;
    bool onClickConfirmed(const ::Coord & c_coord) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() onClickConfirmed:(::djinni_generated::Coord::fromCpp(c_coord))];
            return ::djinni::Bool::toCpp(objcpp_result_);
        }
    }
    bool onLongPress(const ::Coord & c_coord) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() onLongPress:(::djinni_generated::Coord::fromCpp(c_coord))];
            return ::djinni::Bool::toCpp(objcpp_result_);
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto Tiled2dMapRasterLayerCallbackInterface::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    if ([(id)objc isKindOfClass:[MCTiled2dMapRasterLayerCallbackInterfaceCppProxy class]]) {
        return ((MCTiled2dMapRasterLayerCallbackInterfaceCppProxy*)objc)->_cppRefHandle.get();
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto Tiled2dMapRasterLayerCallbackInterface::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    if (auto cppPtr = dynamic_cast<ObjcProxy*>(cpp.get())) {
        return cppPtr->djinni_private_get_proxied_objc_object();
    }
    return ::djinni::get_cpp_proxy<MCTiled2dMapRasterLayerCallbackInterfaceCppProxy>(cpp);
}

}  // namespace djinni_generated

@end
