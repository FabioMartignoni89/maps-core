// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from text.djinni

#import "MCTextLayerInterface+Private.h"
#import "MCTextLayerInterface.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "MCFontLoaderInterface+Private.h"
#import "MCLayerInterface+Private.h"
#import "MCTextInfoInterface+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface MCTextLayerInterface ()

- (id)initWithCpp:(const std::shared_ptr<::TextLayerInterface>&)cppRef;

@end

@implementation MCTextLayerInterface {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::TextLayerInterface>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::TextLayerInterface>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable MCTextLayerInterface *)create:(nullable id<MCFontLoaderInterface>)fontLoader {
    try {
        auto objcpp_result_ = ::TextLayerInterface::create(::djinni_generated::FontLoaderInterface::toCpp(fontLoader));
        return ::djinni_generated::TextLayerInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setTexts:(nonnull NSArray<id<MCTextInfoInterface>> *)texts {
    try {
        _cppRefHandle.get()->setTexts(::djinni::List<::djinni_generated::TextInfoInterface>::toCpp(texts));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable id<MCLayerInterface>)asLayerInterface {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->asLayerInterface();
        return ::djinni_generated::LayerInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)invalidate {
    try {
        _cppRefHandle.get()->invalidate();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto TextLayerInterface::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto TextLayerInterface::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<MCTextLayerInterface>(cpp);
}

} // namespace djinni_generated

@end
