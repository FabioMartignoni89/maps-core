// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from tiled_vector_layer.djinni

#import "MCVectorLayerFeatureInfoValue+Private.h"
#import "DJIMarshal+Private.h"
#import "MCColor+Private.h"
#include <cassert>

namespace djinni_generated {

auto VectorLayerFeatureInfoValue::toCpp(ObjcType obj) -> CppType
{
    assert(obj);
    return {::djinni::Optional<std::optional, ::djinni::String>::toCpp(obj.stringValue),
            ::djinni::Optional<std::optional, ::djinni::F64>::toCpp(obj.doubleValue),
            ::djinni::Optional<std::optional, ::djinni::I64>::toCpp(obj.intValue),
            ::djinni::Optional<std::optional, ::djinni::Bool>::toCpp(obj.boolValue),
            ::djinni::Optional<std::optional, ::djinni_generated::Color>::toCpp(obj.colorValue),
            ::djinni::Optional<std::optional, ::djinni::List<::djinni::F32>>::toCpp(obj.listFloatValue),
            ::djinni::Optional<std::optional, ::djinni::List<::djinni::String>>::toCpp(obj.listStringValue)};
}

auto VectorLayerFeatureInfoValue::fromCpp(const CppType& cpp) -> ObjcType
{
    return [[MCVectorLayerFeatureInfoValue alloc] initWithStringValue:(::djinni::Optional<std::optional, ::djinni::String>::fromCpp(cpp.stringValue))
                                                          doubleValue:(::djinni::Optional<std::optional, ::djinni::F64>::fromCpp(cpp.doubleValue))
                                                             intValue:(::djinni::Optional<std::optional, ::djinni::I64>::fromCpp(cpp.intValue))
                                                            boolValue:(::djinni::Optional<std::optional, ::djinni::Bool>::fromCpp(cpp.boolValue))
                                                           colorValue:(::djinni::Optional<std::optional, ::djinni_generated::Color>::fromCpp(cpp.colorValue))
                                                       listFloatValue:(::djinni::Optional<std::optional, ::djinni::List<::djinni::F32>>::fromCpp(cpp.listFloatValue))
                                                      listStringValue:(::djinni::Optional<std::optional, ::djinni::List<::djinni::String>>::fromCpp(cpp.listStringValue))];
}

} // namespace djinni_generated
