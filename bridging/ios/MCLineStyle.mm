// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from line.djinni

#import "MCLineStyle.h"


@implementation MCLineStyle

- (nonnull instancetype)initWithColor:(nonnull MCColorStateList *)color
                             gapColor:(nonnull MCColorStateList *)gapColor
                              opacity:(float)opacity
                            widthType:(MCSizeType)widthType
                                width:(float)width
                            dashArray:(nonnull NSArray<NSNumber *> *)dashArray
                              lineCap:(MCLineCapType)lineCap
{
    if (self = [super init]) {
        _color = color;
        _gapColor = gapColor;
        _opacity = opacity;
        _widthType = widthType;
        _width = width;
        _dashArray = [dashArray copy];
        _lineCap = lineCap;
    }
    return self;
}

+ (nonnull instancetype)lineStyleWithColor:(nonnull MCColorStateList *)color
                                  gapColor:(nonnull MCColorStateList *)gapColor
                                   opacity:(float)opacity
                                 widthType:(MCSizeType)widthType
                                     width:(float)width
                                 dashArray:(nonnull NSArray<NSNumber *> *)dashArray
                                   lineCap:(MCLineCapType)lineCap
{
    return [(MCLineStyle*)[self alloc] initWithColor:color
                                            gapColor:gapColor
                                             opacity:opacity
                                           widthType:widthType
                                               width:width
                                           dashArray:dashArray
                                             lineCap:lineCap];
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p color:%@ gapColor:%@ opacity:%@ widthType:%@ width:%@ dashArray:%@ lineCap:%@>", self.class, (void *)self, self.color, self.gapColor, @(self.opacity), @(self.widthType), @(self.width), self.dashArray, @(self.lineCap)];
}

@end
