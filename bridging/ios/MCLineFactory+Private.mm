// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from line.djinni

#import "MCLineFactory+Private.h"
#import "MCLineFactory.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "MCCoord+Private.h"
#import "MCLineInfoInterface+Private.h"
#import "MCLineStyle+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface MCLineFactory ()

- (id)initWithCpp:(const std::shared_ptr<::LineFactory>&)cppRef;

@end

@implementation MCLineFactory {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::LineFactory>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::LineFactory>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable MCLineInfoInterface *)createLine:(nonnull NSString *)identifier
                                 coordinates:(nonnull NSArray<MCCoord *> *)coordinates
                                       style:(nonnull MCLineStyle *)style {
    try {
        auto objcpp_result_ = ::LineFactory::createLine(::djinni::String::toCpp(identifier),
                                                        ::djinni::List<::djinni_generated::Coord>::toCpp(coordinates),
                                                        ::djinni_generated::LineStyle::toCpp(style));
        return ::djinni_generated::LineInfoInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto LineFactory::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto LineFactory::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<MCLineFactory>(cpp);
}

} // namespace djinni_generated

@end
